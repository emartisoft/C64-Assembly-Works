;=-=-=-=-=-==-=-=-=-=-==-=-=-=-=-==-=-=-=-=-==-=-=-=-=-=
; Add command to BASIC5
;=-=-=-=-=-==-=-=-=-=-==-=-=-=-=-==-=-=-=-=-==-=-=-=-=-=
; Generated by CBM prg Studio

CHRGET    = $0073
IGONE     = $0308
GONE      = $A7E4
PLOT      = $FFF0
CHROUT    = $FFD2
BORDER    = $D020
SCREEN    = $D021
INK       = $0286
CHKCOM    = $AEFD
GETBYT    = $B79E
STROUT    = $AB1E

        *=$c000

        lda #<ADDCMD
        ldx #>ADDCMD
        sta IGONE
        stx IGONE+1

        lda #<$0803      
        sta $2d
        lda #>$0803
        sta $2e

        rts                             ; return BASIC

ADDCMD
        lda $7a
        ldx $7b
        sta $fb
        stx $fc
        lda #<cmdnam
        ldx #>cmdnam
        sta $fd
        stx $fe
        ldx #$00
        ldy #$00
        
L0000   jsr CHRGET
        sta $02
        
L0001   lda ($fd),y
        cmp $02
        bne L0002 
        iny 
        tya
        cmp comlen,x
        bne L0000       
        txa
        asl
        tax
        lda comexe+1,x
        pha
        lda comexe,x
        pha
        rts
        
L0002   lda comlen,x
        clc
        adc $fd
        sta $fd
        bcc L0003
        inc $fc
        
L0003   inx
        cpx commax
        bne L0001
        lda $fb
        ldx $fc 

        sta $7a
        stx $7b
        jmp GONE

commax  BYTE $06                        ; added command max. count
        
comlen  BYTE $05, $03, $06, $06, $05, $02
                                        ; command length
                                        ; if command word includes BASIC command, for example:
                                        ; cursor -> curs(or) length is not 6 but 5.
        
cmdnam  TEXT "b"                        ; border a
        BYTE $b0  ;OR
        TEXT "der"

        TEXT "cls"                      ; cls

        TEXT "locate"                   ; locate a,a

        TEXT "screen"                   ; screen a,a,a
       
        TEXT "write"                    ; write "text"

        TEXT "ls"                       ; ls

comexe  WORD lborder-1
        WORD cls-1
        WORD locate-1   
        WORD lscreen-1
        WORD lwrite-1
        WORD ls-1

;-------------------------
; cls
;-------------------------      
cls
        jsr CHRGET
        lda #$93
        jsr CHROUT
        jmp $a7ae                       ; next statement for execution

;-------------------------
; border
;-------------------------        
lborder  
        jsr $b79b                       ;Read a byte (and store to X)
        stx BORDER                      
        jmp $a7ae                       ; next statement for execution

;-------------------------
; locate
;-------------------------        
locate  jsr $b79b                       ; Read a byte (and store to X)
        cpx #$19                        ; row < 25
        bcs error 
        stx line
        jsr comma
        cpx #$28                        ; column < 40
        bcs error
        stx column
        ldx line                        ; set
        ldy column
        jsr PLOT                        ; call routine
        jmp $a7ae                       ; next statement for execution         
error   jmp $b248                       ; Output error message ?ILLEGAL QUANTITY

;-------------------------
; screen
;-------------------------  
lscreen
        jsr $b79b                       ; ilk parametreyi x'e al
        cpx #$10                        ; ilk parametre $00-$0f arası olmalı
        bcs error2
        stx bordercolor                 ; border renk ata
        jsr comma                       ; 2. parametreyi al
        cpx #$10                        ; 2. parametre $00-$0f arası olmalı
        bcs error2                
        stx papercolor                  ; paper renk ata
        jsr comma                       ; 3. parametreyi al
        cpx #$10                        ; 3. parametre $00-$0f arası olmalı
        bcs error2
        stx INK                         ; ink rengi ata
        lda bordercolor 
        sta BORDER
        lda papercolor
        sta SCREEN
        jmp $a7ae                       ; next statement for execution       
error2  jmp $b248                       ; Output error message ?ILLEGAL QUANTITY
      
comma   jsr CHKCOM                      ; Check for comma
        jsr GETBYT
        rts
;-------------------------
; write
;-------------------------  
lwrite         
        jsr CHRGET
        ldy #$00
        lda #$0d                        ; default 0081: 20, not skip space
        sta $81
lo      jsr CHRGET
        cmp #$22
        beq uyu
        sta string,y
        iny
        bne lo
hata
        jmp $af08                       ; syntax error
uyu
        lda #$20                        
        sta $81
        jsr CHRGET
        
        lda #$00                        ; last char: $00
        sta string,y

;        ldy #$00                        ; write string
;yaz     lda string,y
;        beq exit                        ; if $00 then exit
;        jsr CHROUT
;        iny
;        bne yaz

        lda #<string
        ldy #>string
        jsr STROUT
exit
        jmp $a7ae                       ; next statement for execution

;-------------------------
; ls
;-------------------------      
ls
        jsr CHRGET
        lda #<yazi
        ldy #>yazi
        jsr STROUT
        
        jmp $a7ae                       ; next statement for execution
yazi
        TEXT "not implemented"
        BYTE 0
;-------------------------

line  
        BYTE $00        
column  
        BYTE $00
bordercolor
        BYTE $00
papercolor
        BYTE $00
string  
        BYTE $00


